{"version":3,"file":"static/js/249.7c800a7e.chunk.js","mappings":"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","sources":["components/LiquidityDashboard.js"],"sourcesContent":["// src/components/LiquidityDashboard.js\r\nimport React, { useContext, useState } from \"react\";\r\nimport { FinancialContext } from \"../context/FinancialContext\";\r\nimport {\r\n  ResponsiveContainer,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  LineChart,\r\n  Line,\r\n  AreaChart,\r\n  Area\r\n} from \"recharts\";\r\n\r\nconst LiquidityDashboard = () => {\r\n  const { financialData } = useContext(FinancialContext);\r\n  const [viewMode, setViewMode] = useState(\"summary\"); // \"summary\", \"projection\", \"analysis\"\r\n\r\n  // Format numbers as currency\r\n  const formatCurrency = (value) => {\r\n    return new Intl.NumberFormat(\"en-SG\", {\r\n      style: \"currency\",\r\n      currency: \"SGD\",\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(value);\r\n  };\r\n\r\n  // Format numbers as percentage\r\n  const formatPercent = (value) => {\r\n    return new Intl.NumberFormat(\"en-SG\", {\r\n      style: \"percent\",\r\n      minimumFractionDigits: 1,\r\n      maximumFractionDigits: 1,\r\n    }).format(value);\r\n  };\r\n\r\n  // Calculate asset types and totals\r\n  const liquidAssets = financialData.personalInfo.currentSavings || 0;\r\n  const cpfAssets = financialData.personalInfo.currentCpfBalance || 0;\r\n  const totalLiabilities = financialData.personalInfo.remainingLoan || 0;\r\n  \r\n  const totalAssets = liquidAssets + cpfAssets;\r\n  const totalLiquidNetWorth = liquidAssets - totalLiabilities;\r\n  const totalNetWorth = totalAssets - totalLiabilities;\r\n  \r\n  const liquidityRatio = totalAssets > 0 ? (liquidAssets / totalAssets) : 0;\r\n  const liquidNetWorthRatio = totalNetWorth !== 0 ? (totalLiquidNetWorth / totalNetWorth) : 0;\r\n  \r\n  // Asset breakdown data for charts\r\n  const assetBreakdownData = [\r\n    { name: \"Liquid Cash (Available)\", value: liquidAssets },\r\n    { name: \"CPF (Restricted)\", value: cpfAssets },\r\n    { name: \"Liabilities\", value: totalLiabilities > 0 ? totalLiabilities : 0 }\r\n  ];\r\n  \r\n  // Net worth comparison data for charts\r\n  const netWorthComparisonData = [\r\n    { name: \"With CPF\", value: totalNetWorth },\r\n    { name: \"Without CPF\", value: totalLiquidNetWorth }\r\n  ];\r\n\r\n  // Monthly income & expenses data\r\n  const monthlyIncome = financialData.income.currentSalary || 0;\r\n  const cpfContribution = monthlyIncome * (financialData.income.cpfRate / 100) || 0;\r\n  const takeHomePay = monthlyIncome - cpfContribution;\r\n  const monthlyExpenses = financialData.expenses.reduce((sum, expense) => sum + expense.amount, 0) || 0;\r\n  const loanPayment = financialData.personalInfo.monthlyRepayment || 0;\r\n  const monthlySavings = takeHomePay - monthlyExpenses - loanPayment;\r\n  \r\n  const monthlyBreakdownData = [\r\n    { name: \"Total Income\", value: monthlyIncome },\r\n    { name: \"Take-Home Pay\", value: takeHomePay },\r\n    { name: \"Living Expenses\", value: monthlyExpenses },\r\n    { name: \"Loan Payment\", value: loanPayment },\r\n    { name: \"Available for Savings\", value: monthlySavings },\r\n    { name: \"CPF Contribution (Restricted)\", value: cpfContribution }\r\n  ];\r\n  \r\n  // Simplified projection data (next 12 months)\r\n  const generateProjectionData = () => {\r\n    let projection = [];\r\n    let currentLiquidAssets = liquidAssets;\r\n    let currentCpfAssets = cpfAssets;\r\n    let currentLoanBalance = totalLiabilities;\r\n    \r\n    // Monthly interest rate (assuming 4% annual rate for calculation)\r\n    const loanInterestRate = (financialData.personalInfo.interestRate || 4) / 100 / 12;\r\n    \r\n    for (let i = 0; i < 12; i++) {\r\n      // Calculate loan payment and interest\r\n      let interestPayment = currentLoanBalance * loanInterestRate;\r\n      let principalPayment = Math.min(currentLoanBalance, loanPayment - interestPayment);\r\n      \r\n      if (currentLoanBalance <= 0) {\r\n        interestPayment = 0;\r\n        principalPayment = 0;\r\n        currentLoanBalance = 0;\r\n      } else {\r\n        currentLoanBalance = Math.max(0, currentLoanBalance - principalPayment);\r\n      }\r\n      \r\n      // Update assets\r\n      currentLiquidAssets += monthlySavings;\r\n      currentCpfAssets += cpfContribution;\r\n      \r\n      const month = new Date();\r\n      month.setMonth(month.getMonth() + i);\r\n      const monthName = month.toLocaleString('default', { month: 'short' });\r\n      \r\n      projection.push({\r\n        month: `${monthName} ${month.getFullYear()}`,\r\n        liquidAssets: currentLiquidAssets,\r\n        cpfAssets: currentCpfAssets,\r\n        loanBalance: currentLoanBalance,\r\n        liquidNetWorth: currentLiquidAssets - currentLoanBalance,\r\n        totalNetWorth: currentLiquidAssets + currentCpfAssets - currentLoanBalance\r\n      });\r\n    }\r\n    \r\n    return projection;\r\n  };\r\n  \r\n  const projectionData = generateProjectionData();\r\n  \r\n  // Asset distribution colors\r\n  const COLORS = [\"#4ade80\", \"#a855f7\", \"#ef4444\"];\r\n  const NET_WORTH_COLORS = [\"#3b82f6\", \"#22c55e\"];\r\n\r\n  // Custom card component\r\n  const Card = ({ title, children, className = \"\" }) => (\r\n    <div className={`bg-white rounded-lg shadow-md p-4 ${className}`}>\r\n      {title && <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">{title}</h3>}\r\n      {children}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Title and Tab Navigation */}\r\n      <div className=\"bg-gradient-to-r from-blue-700 to-blue-600 text-white p-4 rounded-lg shadow-md\">\r\n        <h2 className=\"text-xl font-bold\">Liquidity Dashboard</h2>\r\n        <p className=\"text-blue-100 mt-1\">Clearly see what assets you can actually use</p>\r\n      </div>\r\n      \r\n      {/* Tab Navigation */}\r\n      <div className=\"flex overflow-x-auto mb-4 bg-white rounded-lg shadow-sm border border-gray-200\">\r\n        <button\r\n          className={`py-3 px-4 font-medium whitespace-nowrap flex-shrink-0 transition-colors ${\r\n            viewMode === \"summary\"\r\n              ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\r\n              : \"text-gray-600 hover:text-blue-600 hover:bg-gray-50\"\r\n          }`}\r\n          onClick={() => setViewMode(\"summary\")}\r\n        >\r\n          Summary\r\n        </button>\r\n        <button\r\n          className={`py-3 px-4 font-medium whitespace-nowrap flex-shrink-0 transition-colors ${\r\n            viewMode === \"projection\"\r\n              ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\r\n              : \"text-gray-600 hover:text-blue-600 hover:bg-gray-50\"\r\n          }`}\r\n          onClick={() => setViewMode(\"projection\")}\r\n        >\r\n          Projection\r\n        </button>\r\n        <button\r\n          className={`py-3 px-4 font-medium whitespace-nowrap flex-shrink-0 transition-colors ${\r\n            viewMode === \"analysis\"\r\n              ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\r\n              : \"text-gray-600 hover:text-blue-600 hover:bg-gray-50\"\r\n          }`}\r\n          onClick={() => setViewMode(\"analysis\")}\r\n        >\r\n          Analysis\r\n        </button>\r\n      </div>\r\n      \r\n      {/* Summary View */}\r\n      {viewMode === \"summary\" && (\r\n        <>\r\n          {/* Financial Snapshot */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {/* Available Money */}\r\n            <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-green-500\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Available Money</p>\r\n                  <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(liquidAssets)}</p>\r\n                  <p className=\"text-xs text-gray-500\">Cash you can actually use</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Liquid Net Worth */}\r\n            <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-blue-500\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Liquid Net Worth</p>\r\n                  <p className=\"text-2xl font-bold text-blue-600\">{formatCurrency(totalLiquidNetWorth)}</p>\r\n                  <p className=\"text-xs text-gray-500\">Assets you can use minus debts</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Liquidity Ratio */}\r\n            <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-purple-500\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div>\r\n                  <p className=\"text-sm text-gray-500\">Liquidity Ratio</p>\r\n                  <p className=\"text-2xl font-bold text-purple-600\">{formatPercent(liquidityRatio)}</p>\r\n                  <p className=\"text-xs text-gray-500\">Percentage of your assets that are accessible</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Net Worth Comparison */}\r\n          <Card title=\"Net Worth Comparison (With vs Without CPF)\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-blue-600 font-medium\">Total Net Worth (with CPF):</span>\r\n                  <span className=\"font-bold text-blue-600\">{formatCurrency(totalNetWorth)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-green-600 font-medium\">Liquid Net Worth (without CPF):</span>\r\n                  <span className=\"font-bold text-green-600\">{formatCurrency(totalLiquidNetWorth)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-purple-600 font-medium\">CPF Balance (Restricted):</span>\r\n                  <span className=\"font-bold text-purple-600\">{formatCurrency(cpfAssets)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-red-600 font-medium\">Total Liabilities:</span>\r\n                  <span className=\"font-bold text-red-600\">{formatCurrency(totalLiabilities)}</span>\r\n                </div>\r\n                \r\n                <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-blue-700 mb-2\">Liquid Net Worth Ratio</h4>\r\n                  <p className=\"text-sm text-gray-700\">\r\n                    {formatPercent(liquidNetWorthRatio)} of your net worth is actually available to use\r\n                    {liquidNetWorthRatio < 0.3 ? \r\n                      \". This is quite low - most of your wealth is locked in CPF.\" : \r\n                      liquidNetWorthRatio < 0.6 ? \r\n                      \". This is moderate - a balanced mix of available and locked funds.\" : \r\n                      \". This is good - most of your wealth is accessible when needed.\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"h-64\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={netWorthComparisonData}\r\n                    layout=\"vertical\"\r\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis type=\"number\" tickFormatter={(value) => formatCurrency(value)} />\r\n                    <YAxis type=\"category\" dataKey=\"name\" />\r\n                    <Tooltip formatter={(value) => formatCurrency(value)} />\r\n                    <Legend />\r\n                    <Bar dataKey=\"value\" name=\"Net Worth\">\r\n                      {netWorthComparisonData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={NET_WORTH_COLORS[index % NET_WORTH_COLORS.length]} />\r\n                      ))}\r\n                    </Bar>\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          \r\n          {/* Asset Distribution */}\r\n          <Card title=\"Asset Distribution\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-green-600 font-medium\">Liquid Cash (Available):</span>\r\n                  <span className=\"font-bold\">{formatCurrency(liquidAssets)}</span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                  <div \r\n                    className=\"bg-green-500 h-2.5 rounded-full\" \r\n                    style={{ width: `${Math.min(100, (liquidAssets / (totalAssets + totalLiabilities)) * 100)}%` }}\r\n                  ></div>\r\n                </div>\r\n                \r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-purple-600 font-medium\">CPF (Restricted):</span>\r\n                  <span className=\"font-bold\">{formatCurrency(cpfAssets)}</span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                  <div \r\n                    className=\"bg-purple-500 h-2.5 rounded-full\" \r\n                    style={{ width: `${Math.min(100, (cpfAssets / (totalAssets + totalLiabilities)) * 100)}%` }}\r\n                  ></div>\r\n                </div>\r\n                \r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-red-600 font-medium\">Liabilities:</span>\r\n                  <span className=\"font-bold\">{formatCurrency(totalLiabilities)}</span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                  <div \r\n                    className=\"bg-red-500 h-2.5 rounded-full\" \r\n                    style={{ width: `${Math.min(100, (totalLiabilities / (totalAssets + totalLiabilities)) * 100)}%` }}\r\n                  ></div>\r\n                </div>\r\n                \r\n                <div className=\"mt-4 p-4 bg-green-50 rounded-lg\">\r\n                  <h4 className=\"font-medium text-green-700 mb-2\">Key Financial Metrics</h4>\r\n                  <div className=\"grid grid-cols-2 gap-2\">\r\n                    <div className=\"text-sm\">Liquidity Ratio:</div>\r\n                    <div className=\"text-sm font-medium\">{formatPercent(liquidityRatio)}</div>\r\n                    \r\n                    <div className=\"text-sm\">Debt-to-Asset Ratio:</div>\r\n                    <div className=\"text-sm font-medium\">{formatPercent(totalLiabilities / totalAssets)}</div>\r\n                    \r\n                    <div className=\"text-sm\">Liquid Net Worth:</div>\r\n                    <div className=\"text-sm font-medium\">{formatCurrency(totalLiquidNetWorth)}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"h-64\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={assetBreakdownData}\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      labelLine={false}\r\n                      outerRadius={80}\r\n                      fill=\"#8884d8\"\r\n                      dataKey=\"value\"\r\n                      label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                    >\r\n                      {assetBreakdownData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip formatter={(value) => formatCurrency(value)} />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          \r\n          {/* Monthly Liquidity Analysis */}\r\n          <Card title=\"Monthly Liquidity Analysis\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <h4 className=\"font-medium text-gray-700 mb-3\">Monthly Cash Flow</h4>\r\n                \r\n                <div className=\"flex justify-between items-center text-sm\">\r\n                  <span>Total Income:</span>\r\n                  <span className=\"font-medium\">{formatCurrency(monthlyIncome)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center text-sm\">\r\n                  <span>CPF Contribution (Restricted):</span>\r\n                  <span className=\"font-medium text-purple-600\">- {formatCurrency(cpfContribution)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center text-sm font-medium\">\r\n                  <span>Take-Home Pay:</span>\r\n                  <span className=\"text-green-600\">{formatCurrency(takeHomePay)}</span>\r\n                </div>\r\n                \r\n                <div className=\"border-t border-gray-200 my-2\"></div>\r\n                \r\n                <div className=\"flex justify-between items-center text-sm\">\r\n                  <span>Living Expenses:</span>\r\n                  <span className=\"font-medium text-red-600\">- {formatCurrency(monthlyExpenses)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center text-sm\">\r\n                  <span>Loan Payment:</span>\r\n                  <span className=\"font-medium text-red-600\">- {formatCurrency(loanPayment)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center text-sm font-medium\">\r\n                  <span>Available for Savings:</span>\r\n                  <span className=\"text-green-600\">{formatCurrency(monthlySavings)}</span>\r\n                </div>\r\n                \r\n                <div className=\"border-t border-gray-200 my-2\"></div>\r\n                \r\n                <div className=\"p-4 bg-blue-50 rounded-lg mt-2\">\r\n                  <h4 className=\"font-medium text-blue-700 mb-2\">Cash Flow Analysis</h4>\r\n                  <p className=\"text-sm\">\r\n                    {monthlySavings > 0 \r\n                      ? `You have ${formatCurrency(monthlySavings)} available each month to save or invest.`\r\n                      : `You have a monthly cash flow deficit of ${formatCurrency(Math.abs(monthlySavings))}. Consider reducing expenses.`}\r\n                  </p>\r\n                  <p className=\"text-sm mt-2\">\r\n                    {cpfContribution > 0 \r\n                      ? `Additionally, ${formatCurrency(cpfContribution)} goes to your CPF monthly (restricted access).`\r\n                      : ''}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"h-64\">\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <BarChart\r\n                    data={monthlyBreakdownData}\r\n                    layout=\"vertical\"\r\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis type=\"number\" tickFormatter={(value) => formatCurrency(value)} />\r\n                    <YAxis type=\"category\" width={130} dataKey=\"name\" />\r\n                    <Tooltip formatter={(value) => formatCurrency(value)} />\r\n                    <Bar dataKey=\"value\" fill=\"#3b82f6\" />\r\n                  </BarChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </>\r\n      )}\r\n      \r\n      {/* Projection View */}\r\n      {viewMode === \"projection\" && (\r\n        <>\r\n          <Card title=\"12-Month Liquid vs. Total Net Worth Projection\">\r\n            <div className=\"h-72 mb-6\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <AreaChart\r\n                  data={projectionData}\r\n                  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"month\" />\r\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\r\n                  <Tooltip formatter={(value) => formatCurrency(value)} />\r\n                  <Legend />\r\n                  <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"totalNetWorth\"\r\n                    name=\"Total Net Worth (with CPF)\"\r\n                    stroke=\"#3b82f6\"\r\n                    fill=\"#3b82f6\"\r\n                    fillOpacity={0.3}\r\n                  />\r\n                  <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"liquidNetWorth\"\r\n                    name=\"Liquid Net Worth (without CPF)\"\r\n                    stroke=\"#22c55e\"\r\n                    fill=\"#22c55e\"\r\n                    fillOpacity={0.3}\r\n                  />\r\n                </AreaChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            \r\n            <div className=\"h-72\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <AreaChart\r\n                  data={projectionData}\r\n                  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"month\" />\r\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\r\n                  <Tooltip formatter={(value) => formatCurrency(value)} />\r\n                  <Legend />\r\n                  <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"liquidAssets\"\r\n                    name=\"Liquid Assets (Cash)\"\r\n                    stroke=\"#4ade80\"\r\n                    fill=\"#4ade80\"\r\n                    fillOpacity={0.3}\r\n                  />\r\n                  <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"cpfAssets\"\r\n                    name=\"CPF Assets (Restricted)\"\r\n                    stroke=\"#a855f7\"\r\n                    fill=\"#a855f7\"\r\n                    fillOpacity={0.3}\r\n                  />\r\n                  <Area\r\n                    type=\"monotone\"\r\n                    dataKey=\"loanBalance\"\r\n                    name=\"Loan Balance\"\r\n                    stroke=\"#ef4444\"\r\n                    fill=\"#ef4444\"\r\n                    fillOpacity={0.3}\r\n                  />\r\n                </AreaChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n            \r\n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\r\n              <h4 className=\"font-medium text-blue-700 mb-2\">Projection Summary</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <p className=\"text-sm mb-2\">In 12 months, your financial position is projected to be:</p>\r\n                  <ul className=\"space-y-1 text-sm\">\r\n                    <li>Liquid Assets: {formatCurrency(projectionData[11].liquidAssets)}</li>\r\n                    <li>CPF Balance: {formatCurrency(projectionData[11].cpfAssets)}</li>\r\n                    <li>Loan Balance: {formatCurrency(projectionData[11].loanBalance)}</li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm mb-2\">Net worth comparison after 12 months:</p>\r\n                  <ul className=\"space-y-1 text-sm\">\r\n                    <li>Total Net Worth (with CPF): {formatCurrency(projectionData[11].totalNetWorth)}</li>\r\n                    <li>Liquid Net Worth (without CPF): {formatCurrency(projectionData[11].liquidNetWorth)}</li>\r\n                    <li>Increase in Liquid Net Worth: {formatCurrency(projectionData[11].liquidNetWorth - totalLiquidNetWorth)}</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n          \r\n          <Card title=\"12-Month Projection Data\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Month\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Liquid Assets\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      CPF Balance\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Loan Balance\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Liquid Net Worth\r\n                    </th>\r\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      Total Net Worth\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {projectionData.map((entry, index) => (\r\n                    <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {entry.month}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600\">\r\n                        {formatCurrency(entry.liquidAssets)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-purple-600\">\r\n                        {formatCurrency(entry.cpfAssets)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-600\">\r\n                        {formatCurrency(entry.loanBalance)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600\">\r\n                        {formatCurrency(entry.liquidNetWorth)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-blue-600\">\r\n                        {formatCurrency(entry.totalNetWorth)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </Card>\r\n        </>\r\n      )}\r\n      \r\n      {/* Analysis View */}\r\n      {viewMode === \"analysis\" && (\r\n        <>\r\n          <Card title=\"Liquidity Analysis\">\r\n            <div className=\"space-y-6\">\r\n              <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <h4 className=\"font-medium text-blue-700 mb-2\">Your Liquidity Score</h4>\r\n                <div className=\"flex items-center mb-3\">\r\n                  <div className=\"flex-grow bg-gray-200 rounded-full h-4\">\r\n                    <div \r\n                      className={`h-4 rounded-full ${\r\n                        liquidityRatio < 0.3 ? 'bg-red-500' : \r\n                        liquidityRatio < 0.6 ? 'bg-yellow-500' : 'bg-green-500'\r\n                      }`} \r\n                      style={{ width: `${liquidityRatio * 100}%` }}\r\n                    ></div>\r\n                  </div>\r\n                  <span className=\"ml-3 font-medium\">{(liquidityRatio * 100).toFixed(0)}%</span>\r\n                </div>\r\n                <p className=\"text-sm\">\r\n                  {liquidityRatio < 0.3 \r\n                    ? \"Poor - Most of your assets are locked in CPF, limiting your financial flexibility.\" \r\n                    : liquidityRatio < 0.6 \r\n                    ? \"Moderate - You have a balanced mix of liquid and locked assets.\" \r\n                    : \"Excellent - You have good financial flexibility with most assets being liquid.\"}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                  <h4 className=\"font-medium text-green-700 mb-2\">Liquid Assets Analysis</h4>\r\n                  <ul className=\"space-y-2 text-sm\">\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-green-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>You have {formatCurrency(liquidAssets)} in liquid assets that you can use immediately.</span>\r\n                    </li>\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-green-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Your liquid net worth is {formatCurrency(totalLiquidNetWorth)}.</span>\r\n                    </li>\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-green-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>You're saving approximately {formatCurrency(monthlySavings)} in liquid assets monthly.</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                \r\n                <div className=\"p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                  <h4 className=\"font-medium text-purple-700 mb-2\">CPF Analysis</h4>\r\n                  <ul className=\"space-y-2 text-sm\">\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-purple-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>You have {formatCurrency(cpfAssets)} in CPF (restricted access).</span>\r\n                    </li>\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-purple-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Contributing {formatCurrency(cpfContribution)} to CPF monthly.</span>\r\n                    </li>\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-purple-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>CPF makes up {formatPercent(cpfAssets / totalAssets)} of your total assets.</span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <h4 className=\"font-medium text-blue-700 mb-2\">Recommendations</h4>\r\n                <ul className=\"space-y-2 text-sm\">\r\n                  {liquidityRatio < 0.3 && (\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Focus on building liquid assets to improve financial flexibility.</span>\r\n                    </li>\r\n                  )}\r\n                  \r\n                  {monthlySavings < (takeHomePay * 0.2) && (\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Consider increasing your liquid savings rate to at least 20% of take-home pay.</span>\r\n                    </li>\r\n                  )}\r\n                  \r\n                  {liquidAssets < (monthlyExpenses * 3) && (\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Build an emergency fund of at least 3-6 months of expenses in liquid assets.</span>\r\n                    </li>\r\n                  )}\r\n                  \r\n                  {totalLiabilities > 0 && totalLiabilities > (liquidAssets * 0.5) && (\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Consider accelerating debt payoff to improve your liquid net worth.</span>\r\n                    </li>\r\n                  )}\r\n                  \r\n                  {liquidAssets > (monthlyExpenses * 6) && (\r\n                    <li className=\"flex items-start\">\r\n                      <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                      </svg>\r\n                      <span>Consider investing some of your excess liquid assets for better long-term growth.</span>\r\n                    </li>\r\n                  )}\r\n                  \r\n                  <li className=\"flex items-start\">\r\n                    <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                    </svg>\r\n                    <span>Track your liquidity ratio over time to ensure it aligns with your financial goals.</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiquidityDashboard;\r\n"],"names":["LiquidityDashboard","financialData","useContext","FinancialContext","viewMode","setViewMode","useState","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","liquidAssets","personalInfo","currentSavings","cpfAssets","currentCpfBalance","totalLiabilities","remainingLoan","totalAssets","totalLiquidNetWorth","totalNetWorth","liquidityRatio","liquidNetWorthRatio","assetBreakdownData","name","netWorthComparisonData","monthlyIncome","income","currentSalary","cpfContribution","cpfRate","takeHomePay","monthlyExpenses","expenses","reduce","sum","expense","amount","loanPayment","monthlyRepayment","monthlySavings","monthlyBreakdownData","projectionData","generateProjectionData","projection","currentLiquidAssets","currentCpfAssets","currentLoanBalance","loanInterestRate","interestRate","i","interestPayment","principalPayment","Math","min","max","month","Date","setMonth","getMonth","monthName","toLocaleString","push","getFullYear","loanBalance","liquidNetWorth","COLORS","NET_WORTH_COLORS","Card","_ref","title","children","className","_jsxs","_jsx","onClick","_Fragment","ResponsiveContainer","width","height","BarChart","data","layout","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","type","tickFormatter","YAxis","dataKey","Tooltip","formatter","Legend","Bar","map","entry","index","Cell","fill","length","PieChart","Pie","cx","cy","labelLine","outerRadius","label","_ref2","percent","toFixed","abs","AreaChart","Area","stroke","fillOpacity","scope","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}