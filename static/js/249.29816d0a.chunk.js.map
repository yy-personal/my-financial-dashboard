{"version":3,"file":"static/js/249.29816d0a.chunk.js","mappings":"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","sources":["components/LiquidityDashboard.js"],"sourcesContent":["// src/components/LiquidityDashboard.js\nimport React, { useContext, useState } from \"react\";\nimport { FinancialContext } from \"../context/FinancialContext\";\nimport {\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LineChart,\n  Line,\n  AreaChart,\n  Area\n} from \"recharts\";\n\nconst LiquidityDashboard = () => {\n  const { financialData } = useContext(FinancialContext);\n  const [viewMode, setViewMode] = useState(\"summary\"); // \"summary\", \"projection\", \"analysis\"\n\n  // Format numbers as currency\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat(\"en-SG\", {\n      style: \"currency\",\n      currency: \"SGD\",\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  };\n\n  // Format numbers as percentage\n  const formatPercent = (value) => {\n    return new Intl.NumberFormat(\"en-SG\", {\n      style: \"percent\",\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 1,\n    }).format(value);\n  };\n\n  // Calculate asset types and totals\n  const liquidAssets = financialData.personalInfo.currentSavings || 0;\n  const cpfAssets = financialData.personalInfo.currentCpfBalance || 0;\n  const totalLiabilities = financialData.personalInfo.remainingLoan || 0;\n  \n  const totalAssets = liquidAssets + cpfAssets;\n  const totalLiquidNetWorth = liquidAssets - totalLiabilities;\n  const totalNetWorth = totalAssets - totalLiabilities;\n  \n  const liquidityRatio = totalAssets > 0 ? (liquidAssets / totalAssets) : 0;\n  \n  // Fixed liquidity ratio calculation - handle negative net worth properly\n  const calculateLiquidityMessage = () => {\n    if (totalNetWorth <= 0) {\n      return {\n        ratio: null,\n        message: `You currently have negative net worth (${formatCurrency(totalNetWorth)}). Your liquid assets of ${formatCurrency(liquidAssets)} can help cover ${formatPercent(Math.abs(liquidAssets / totalLiabilities))} of your debt. Focus on debt reduction and building emergency savings.`,\n        type: \"negative_net_worth\"\n      };\n    }\n    \n    const liquidNetWorthRatio = totalLiquidNetWorth / totalNetWorth;\n    \n    let message;\n    if (liquidNetWorthRatio < 0.3) {\n      message = \"This is quite low - most of your wealth is locked in CPF.\";\n    } else if (liquidNetWorthRatio < 0.6) {\n      message = \"This is moderate - a balanced mix of available and locked funds.\";\n    } else {\n      message = \"This is good - most of your wealth is accessible when needed.\";\n    }\n    \n    return {\n      ratio: liquidNetWorthRatio,\n      message: `${formatPercent(liquidNetWorthRatio)} of your net worth is actually available to use. ${message}`,\n      type: \"positive_net_worth\"\n    };\n  };\n  \n  const liquidityAnalysis = calculateLiquidityMessage();\n  \n  // Asset breakdown data for charts\n  const assetBreakdownData = [\n    { name: \"Liquid Cash (Available)\", value: liquidAssets },\n    { name: \"CPF (Restricted)\", value: cpfAssets },\n    { name: \"Liabilities\", value: totalLiabilities > 0 ? totalLiabilities : 0 }\n  ];\n  \n  // Net worth comparison data for charts\n  const netWorthComparisonData = [\n    { name: \"With CPF\", value: totalNetWorth },\n    { name: \"Without CPF\", value: totalLiquidNetWorth }\n  ];\n\n  // Monthly income & expenses data\n  const monthlyIncome = financialData.income.currentSalary || 0;\n  const cpfContribution = monthlyIncome * (financialData.income.cpfRate / 100) || 0;\n  const takeHomePay = monthlyIncome - cpfContribution;\n  const monthlyExpenses = financialData.expenses.reduce((sum, expense) => sum + expense.amount, 0) || 0;\n  const loanPayment = financialData.personalInfo.monthlyRepayment || 0;\n  const monthlySavings = takeHomePay - monthlyExpenses - loanPayment;\n  \n  const monthlyBreakdownData = [\n    { name: \"Total Income\", value: monthlyIncome },\n    { name: \"Take-Home Pay\", value: takeHomePay },\n    { name: \"Living Expenses\", value: monthlyExpenses },\n    { name: \"Loan Payment\", value: loanPayment },\n    { name: \"Available for Savings\", value: monthlySavings },\n    { name: \"CPF Contribution (Restricted)\", value: cpfContribution }\n  ];\n  \n  // Simplified projection data (next 12 months)\n  const generateProjectionData = () => {\n    let projection = [];\n    let currentLiquidAssets = liquidAssets;\n    let currentCpfAssets = cpfAssets;\n    let currentLoanBalance = totalLiabilities;\n    \n    // Monthly interest rate (assuming 4% annual rate for calculation)\n    const loanInterestRate = (financialData.personalInfo.interestRate || 4) / 100 / 12;\n    \n    for (let i = 0; i < 12; i++) {\n      // Calculate loan payment and interest\n      let interestPayment = currentLoanBalance * loanInterestRate;\n      let principalPayment = Math.min(currentLoanBalance, loanPayment - interestPayment);\n      \n      if (currentLoanBalance <= 0) {\n        interestPayment = 0;\n        principalPayment = 0;\n        currentLoanBalance = 0;\n      } else {\n        currentLoanBalance = Math.max(0, currentLoanBalance - principalPayment);\n      }\n      \n      // Update assets\n      currentLiquidAssets += monthlySavings;\n      currentCpfAssets += cpfContribution;\n      \n      const month = new Date();\n      month.setMonth(month.getMonth() + i);\n      const monthName = month.toLocaleString('default', { month: 'short' });\n      \n      projection.push({\n        month: `${monthName} ${month.getFullYear()}`,\n        liquidAssets: currentLiquidAssets,\n        cpfAssets: currentCpfAssets,\n        loanBalance: currentLoanBalance,\n        liquidNetWorth: currentLiquidAssets - currentLoanBalance,\n        totalNetWorth: currentLiquidAssets + currentCpfAssets - currentLoanBalance\n      });\n    }\n    \n    return projection;\n  };\n  \n  const projectionData = generateProjectionData();\n  \n  // Asset distribution colors\n  const COLORS = [\"#4ade80\", \"#a855f7\", \"#ef4444\"];\n  const NET_WORTH_COLORS = [\"#3b82f6\", \"#22c55e\"];\n\n  // Custom card component\n  const Card = ({ title, children, className = \"\" }) => (\n    <div className={`bg-white rounded-lg shadow-md p-4 ${className}`}>\n      {title && <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">{title}</h3>}\n      {children}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Title and Tab Navigation */}\n      <div className=\"bg-gradient-to-r from-blue-700 to-blue-600 text-white p-4 rounded-lg shadow-md\">\n        <h2 className=\"text-xl font-bold\">Liquidity Dashboard</h2>\n        <p className=\"text-blue-100 mt-1\">Clearly see what assets you can actually use</p>\n      </div>\n      \n      {/* Tab Navigation */}\n      <div className=\"flex overflow-x-auto mb-4 bg-white rounded-lg shadow-sm border border-gray-200\">\n        <button\n          className={`py-3 px-4 font-medium whitespace-nowrap flex-shrink-0 transition-colors ${\n            viewMode === \"summary\"\n              ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\n              : \"text-gray-600 hover:text-blue-600 hover:bg-gray-50\"\n          }`}\n          onClick={() => setViewMode(\"summary\")}\n        >\n          Summary\n        </button>\n        <button\n          className={`py-3 px-4 font-medium whitespace-nowrap flex-shrink-0 transition-colors ${\n            viewMode === \"projection\"\n              ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\n              : \"text-gray-600 hover:text-blue-600 hover:bg-gray-50\"\n          }`}\n          onClick={() => setViewMode(\"projection\")}\n        >\n          Projection\n        </button>\n        <button\n          className={`py-3 px-4 font-medium whitespace-nowrap flex-shrink-0 transition-colors ${\n            viewMode === \"analysis\"\n              ? \"text-blue-600 border-b-2 border-blue-600 bg-blue-50\"\n              : \"text-gray-600 hover:text-blue-600 hover:bg-gray-50\"\n          }`}\n          onClick={() => setViewMode(\"analysis\")}\n        >\n          Analysis\n        </button>\n      </div>\n      \n      {/* Summary View */}\n      {viewMode === \"summary\" && (\n        <>\n          {/* Financial Snapshot */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {/* Available Money */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-green-500\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Available Money</p>\n                  <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(liquidAssets)}</p>\n                  <p className=\"text-xs text-gray-500\">Cash you can actually use</p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Liquid Net Worth */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-blue-500\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Liquid Net Worth</p>\n                  <p className={`text-2xl font-bold ${totalLiquidNetWorth >= 0 ? 'text-blue-600' : 'text-red-600'}`}>\n                    {formatCurrency(totalLiquidNetWorth)}\n                  </p>\n                  <p className=\"text-xs text-gray-500\">Assets you can use minus debts</p>\n                </div>\n              </div>\n            </div>\n            \n            {/* Liquidity Ratio */}\n            <div className=\"bg-white p-4 rounded-lg shadow-md border-l-4 border-purple-500\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <p className=\"text-sm text-gray-500\">Liquidity Ratio</p>\n                  <p className=\"text-2xl font-bold text-purple-600\">{formatPercent(liquidityRatio)}</p>\n                  <p className=\"text-xs text-gray-500\">Percentage of your assets that are accessible</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          {/* Net Worth Comparison */}\n          <Card title=\"Net Worth Comparison (With vs Without CPF)\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-blue-600 font-medium\">Total Net Worth (with CPF):</span>\n                  <span className={`font-bold ${totalNetWorth >= 0 ? 'text-blue-600' : 'text-red-600'}`}>\n                    {formatCurrency(totalNetWorth)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-green-600 font-medium\">Liquid Net Worth (without CPF):</span>\n                  <span className={`font-bold ${totalLiquidNetWorth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                    {formatCurrency(totalLiquidNetWorth)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-purple-600 font-medium\">CPF Balance (Restricted):</span>\n                  <span className=\"font-bold text-purple-600\">{formatCurrency(cpfAssets)}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-red-600 font-medium\">Total Liabilities:</span>\n                  <span className=\"font-bold text-red-600\">{formatCurrency(totalLiabilities)}</span>\n                </div>\n                \n                <div className={`mt-4 p-4 rounded-lg ${\n                  liquidityAnalysis.type === \"negative_net_worth\" \n                    ? \"bg-red-50 border border-red-200\" \n                    : \"bg-blue-50\"\n                }`}>\n                  <h4 className={`font-medium mb-2 ${\n                    liquidityAnalysis.type === \"negative_net_worth\" \n                      ? \"text-red-700\" \n                      : \"text-blue-700\"\n                  }`}>\n                    {liquidityAnalysis.type === \"negative_net_worth\" \n                      ? \"Financial Status Alert\" \n                      : \"Liquid Net Worth Ratio\"}\n                  </h4>\n                  <p className=\"text-sm text-gray-700\">\n                    {liquidityAnalysis.message}\n                  </p>\n                  {liquidityAnalysis.type === \"negative_net_worth\" && (\n                    <div className=\"mt-3 p-3 bg-yellow-50 border border-yellow-200 rounded\">\n                      <p className=\"text-sm text-yellow-800\">\n                        <strong>Priority:</strong> Focus on paying down debt and building an emergency fund. \n                        Your liquid assets can cover {formatPercent(Math.abs(liquidAssets / totalLiabilities))} of your current debt.\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={netWorthComparisonData}\n                    layout=\"vertical\"\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis type=\"number\" tickFormatter={(value) => formatCurrency(value)} />\n                    <YAxis type=\"category\" dataKey=\"name\" />\n                    <Tooltip formatter={(value) => formatCurrency(value)} />\n                    <Legend />\n                    <Bar dataKey=\"value\" name=\"Net Worth\">\n                      {netWorthComparisonData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={\n                          entry.value >= 0 \n                            ? NET_WORTH_COLORS[index % NET_WORTH_COLORS.length]\n                            : \"#ef4444\" // Red for negative values\n                        } />\n                      ))}\n                    </Bar>\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Card>\n          \n          {/* Asset Distribution */}\n          <Card title=\"Asset Distribution\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-green-600 font-medium\">Liquid Cash (Available):</span>\n                  <span className=\"font-bold\">{formatCurrency(liquidAssets)}</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                  <div \n                    className=\"bg-green-500 h-2.5 rounded-full\" \n                    style={{ width: `${Math.min(100, (liquidAssets / (totalAssets + totalLiabilities)) * 100)}%` }}\n                  ></div>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-purple-600 font-medium\">CPF (Restricted):</span>\n                  <span className=\"font-bold\">{formatCurrency(cpfAssets)}</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                  <div \n                    className=\"bg-purple-500 h-2.5 rounded-full\" \n                    style={{ width: `${Math.min(100, (cpfAssets / (totalAssets + totalLiabilities)) * 100)}%` }}\n                  ></div>\n                </div>\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-red-600 font-medium\">Liabilities:</span>\n                  <span className=\"font-bold\">{formatCurrency(totalLiabilities)}</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                  <div \n                    className=\"bg-red-500 h-2.5 rounded-full\" \n                    style={{ width: `${Math.min(100, (totalLiabilities / (totalAssets + totalLiabilities)) * 100)}%` }}\n                  ></div>\n                </div>\n                \n                <div className=\"mt-4 p-4 bg-green-50 rounded-lg\">\n                  <h4 className=\"font-medium text-green-700 mb-2\">Key Financial Metrics</h4>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"text-sm\">Liquidity Ratio:</div>\n                    <div className=\"text-sm font-medium\">{formatPercent(liquidityRatio)}</div>\n                    \n                    <div className=\"text-sm\">Debt-to-Asset Ratio:</div>\n                    <div className=\"text-sm font-medium\">{formatPercent(totalAssets > 0 ? totalLiabilities / totalAssets : 0)}</div>\n                    \n                    <div className=\"text-sm\">Liquid Net Worth:</div>\n                    <div className={`text-sm font-medium ${totalLiquidNetWorth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      {formatCurrency(totalLiquidNetWorth)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <PieChart>\n                    <Pie\n                      data={assetBreakdownData}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                      label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                    >\n                      {assetBreakdownData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Tooltip formatter={(value) => formatCurrency(value)} />\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Card>\n          \n          {/* Monthly Liquidity Analysis */}\n          <Card title=\"Monthly Liquidity Analysis\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <h4 className=\"font-medium text-gray-700 mb-3\">Monthly Cash Flow</h4>\n                \n                <div className=\"flex justify-between items-center text-sm\">\n                  <span>Total Income:</span>\n                  <span className=\"font-medium\">{formatCurrency(monthlyIncome)}</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span>CPF Contribution (Restricted):</span>\n                  <span className=\"font-medium text-purple-600\">- {formatCurrency(cpfContribution)}</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm font-medium\">\n                  <span>Take-Home Pay:</span>\n                  <span className=\"text-green-600\">{formatCurrency(takeHomePay)}</span>\n                </div>\n                \n                <div className=\"border-t border-gray-200 my-2\"></div>\n                \n                <div className=\"flex justify-between items-center text-sm\">\n                  <span>Living Expenses:</span>\n                  <span className=\"font-medium text-red-600\">- {formatCurrency(monthlyExpenses)}</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <span>Loan Payment:</span>\n                  <span className=\"font-medium text-red-600\">- {formatCurrency(loanPayment)}</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm font-medium\">\n                  <span>Available for Savings:</span>\n                  <span className={monthlySavings >= 0 ? \"text-green-600\" : \"text-red-600\"}>\n                    {formatCurrency(monthlySavings)}\n                  </span>\n                </div>\n                \n                <div className=\"border-t border-gray-200 my-2\"></div>\n                \n                <div className={`p-4 rounded-lg mt-2 ${\n                  monthlySavings >= 0 ? \"bg-blue-50\" : \"bg-red-50 border border-red-200\"\n                }`}>\n                  <h4 className={`font-medium mb-2 ${\n                    monthlySavings >= 0 ? \"text-blue-700\" : \"text-red-700\"\n                  }`}>\n                    Cash Flow Analysis\n                  </h4>\n                  <p className=\"text-sm\">\n                    {monthlySavings > 0 \n                      ? `You have ${formatCurrency(monthlySavings)} available each month to save or invest.`\n                      : `You have a monthly cash flow deficit of ${formatCurrency(Math.abs(monthlySavings))}. Consider reducing expenses or increasing income.`}\n                  </p>\n                  <p className=\"text-sm mt-2\">\n                    {cpfContribution > 0 \n                      ? `Additionally, ${formatCurrency(cpfContribution)} goes to your CPF monthly (restricted access).`\n                      : ''}\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"h-64\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart\n                    data={monthlyBreakdownData}\n                    layout=\"vertical\"\n                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis type=\"number\" tickFormatter={(value) => formatCurrency(value)} />\n                    <YAxis type=\"category\" width={130} dataKey=\"name\" />\n                    <Tooltip formatter={(value) => formatCurrency(value)} />\n                    <Bar dataKey=\"value\" fill=\"#3b82f6\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Card>\n        </>\n      )}\n      \n      {/* Projection View */}\n      {viewMode === \"projection\" && (\n        <>\n          <Card title=\"12-Month Liquid vs. Total Net Worth Projection\">\n            <div className=\"h-72 mb-6\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart\n                  data={projectionData}\n                  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => formatCurrency(value)} />\n                  <Legend />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"totalNetWorth\"\n                    name=\"Total Net Worth (with CPF)\"\n                    stroke=\"#3b82f6\"\n                    fill=\"#3b82f6\"\n                    fillOpacity={0.3}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"liquidNetWorth\"\n                    name=\"Liquid Net Worth (without CPF)\"\n                    stroke=\"#22c55e\"\n                    fill=\"#22c55e\"\n                    fillOpacity={0.3}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n            \n            <div className=\"h-72\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart\n                  data={projectionData}\n                  margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => formatCurrency(value)} />\n                  <Legend />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"liquidAssets\"\n                    name=\"Liquid Assets (Cash)\"\n                    stroke=\"#4ade80\"\n                    fill=\"#4ade80\"\n                    fillOpacity={0.3}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"cpfAssets\"\n                    name=\"CPF Assets (Restricted)\"\n                    stroke=\"#a855f7\"\n                    fill=\"#a855f7\"\n                    fillOpacity={0.3}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"loanBalance\"\n                    name=\"Loan Balance\"\n                    stroke=\"#ef4444\"\n                    fill=\"#ef4444\"\n                    fillOpacity={0.3}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n            \n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n              <h4 className=\"font-medium text-blue-700 mb-2\">Projection Summary</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm mb-2\">In 12 months, your financial position is projected to be:</p>\n                  <ul className=\"space-y-1 text-sm\">\n                    <li>Liquid Assets: {formatCurrency(projectionData[11].liquidAssets)}</li>\n                    <li>CPF Balance: {formatCurrency(projectionData[11].cpfAssets)}</li>\n                    <li>Loan Balance: {formatCurrency(projectionData[11].loanBalance)}</li>\n                  </ul>\n                </div>\n                <div>\n                  <p className=\"text-sm mb-2\">Net worth comparison after 12 months:</p>\n                  <ul className=\"space-y-1 text-sm\">\n                    <li>Total Net Worth (with CPF): {formatCurrency(projectionData[11].totalNetWorth)}</li>\n                    <li>Liquid Net Worth (without CPF): {formatCurrency(projectionData[11].liquidNetWorth)}</li>\n                    <li>Increase in Liquid Net Worth: {formatCurrency(projectionData[11].liquidNetWorth - totalLiquidNetWorth)}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Card>\n          \n          <Card title=\"12-Month Projection Data\">\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Month\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Liquid Assets\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      CPF Balance\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Loan Balance\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Liquid Net Worth\n                    </th>\n                    <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Total Net Worth\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {projectionData.map((entry, index) => (\n                    <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        {entry.month}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-green-600\">\n                        {formatCurrency(entry.liquidAssets)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-purple-600\">\n                        {formatCurrency(entry.cpfAssets)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-red-600\">\n                        {formatCurrency(entry.loanBalance)}\n                      </td>\n                      <td className={`px-6 py-4 whitespace-nowrap text-sm ${\n                        entry.liquidNetWorth >= 0 ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {formatCurrency(entry.liquidNetWorth)}\n                      </td>\n                      <td className={`px-6 py-4 whitespace-nowrap text-sm ${\n                        entry.totalNetWorth >= 0 ? 'text-blue-600' : 'text-red-600'\n                      }`}>\n                        {formatCurrency(entry.totalNetWorth)}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </Card>\n        </>\n      )}\n      \n      {/* Analysis View */}\n      {viewMode === \"analysis\" && (\n        <>\n          <Card title=\"Liquidity Analysis\">\n            <div className=\"space-y-6\">\n              <div className={`p-4 rounded-lg border ${\n                liquidityAnalysis.type === \"negative_net_worth\" \n                  ? \"bg-red-50 border-red-200\" \n                  : \"bg-blue-50 border-blue-200\"\n              }`}>\n                <h4 className={`font-medium mb-2 ${\n                  liquidityAnalysis.type === \"negative_net_worth\" \n                    ? \"text-red-700\" \n                    : \"text-blue-700\"\n                }`}>\n                  {liquidityAnalysis.type === \"negative_net_worth\" \n                    ? \"Financial Recovery Status\" \n                    : \"Your Liquidity Score\"}\n                </h4>\n                \n                {liquidityAnalysis.type === \"positive_net_worth\" && (\n                  <>\n                    <div className=\"flex items-center mb-3\">\n                      <div className=\"flex-grow bg-gray-200 rounded-full h-4\">\n                        <div \n                          className={`h-4 rounded-full ${\n                            liquidityAnalysis.ratio < 0.3 ? 'bg-red-500' : \n                            liquidityAnalysis.ratio < 0.6 ? 'bg-yellow-500' : 'bg-green-500'\n                          }`} \n                          style={{ width: `${liquidityAnalysis.ratio * 100}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"ml-3 font-medium\">{(liquidityAnalysis.ratio * 100).toFixed(0)}%</span>\n                    </div>\n                  </>\n                )}\n                \n                <p className=\"text-sm\">\n                  {liquidityAnalysis.message}\n                </p>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\n                  <h4 className=\"font-medium text-green-700 mb-2\">Liquid Assets Analysis</h4>\n                  <ul className=\"space-y-2 text-sm\">\n                    <li className=\"flex items-start\">\n                      <svg className=\"h-5 w-5 text-green-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                      </svg>\n                      <span>You have {formatCurrency(liquidAssets)} in liquid assets that you can use immediately.</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <svg className={`h-5 w-5 mr-2 mt-0.5 flex-shrink-0 ${\n                        totalLiquidNetWorth >= 0 ? 'text-green-500' : 'text-red-500'\n                      }`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" \n                          d={totalLiquidNetWorth >= 0 \n                            ? \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                            : \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z\"\n                          }>\n                        </path>\n                      </svg>\n                      <span>Your liquid net worth is {formatCurrency(totalLiquidNetWorth)}.</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <svg className={`h-5 w-5 mr-2 mt-0.5 flex-shrink-0 ${\n                        monthlySavings >= 0 ? 'text-green-500' : 'text-red-500'\n                      }`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" \n                          d={monthlySavings >= 0 \n                            ? \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                            : \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z\"\n                          }>\n                        </path>\n                      </svg>\n                      <span>\n                        {monthlySavings >= 0 \n                          ? `You're saving approximately ${formatCurrency(monthlySavings)} in liquid assets monthly.`\n                          : `You have a monthly deficit of ${formatCurrency(Math.abs(monthlySavings))}.`}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n                \n                <div className=\"p-4 bg-purple-50 rounded-lg border border-purple-200\">\n                  <h4 className=\"font-medium text-purple-700 mb-2\">CPF Analysis</h4>\n                  <ul className=\"space-y-2 text-sm\">\n                    <li className=\"flex items-start\">\n                      <svg className=\"h-5 w-5 text-purple-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                      </svg>\n                      <span>You have {formatCurrency(cpfAssets)} in CPF (restricted access).</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <svg className=\"h-5 w-5 text-purple-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                      </svg>\n                      <span>Contributing {formatCurrency(cpfContribution)} to CPF monthly.</span>\n                    </li>\n                    <li className=\"flex items-start\">\n                      <svg className=\"h-5 w-5 text-purple-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                      </svg>\n                      <span>CPF makes up {formatPercent(totalAssets > 0 ? cpfAssets / totalAssets : 0)} of your total assets.</span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n                <h4 className=\"font-medium text-blue-700 mb-2\">Recommendations</h4>\n                <ul className=\"space-y-2 text-sm\">\n                  {liquidityAnalysis.type === \"negative_net_worth\" && (\n                    <>\n                      <li className=\"flex items-start\">\n                        <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                        </svg>\n                        <span><strong>Priority 1:</strong> Focus on debt reduction. Your debt ({formatCurrency(totalLiabilities)}) exceeds your assets ({formatCurrency(totalAssets)}).</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                        </svg>\n                        <span><strong>Priority 2:</strong> {monthlySavings < 0 ? 'Reduce expenses or increase income to stop the monthly deficit.' : 'Continue saving to build emergency fund.'}</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                        </svg>\n                        <span><strong>Priority 3:</strong> Build at least $1,000 emergency fund before focusing on investments.</span>\n                      </li>\n                    </>\n                  )}\n                  \n                  {liquidityAnalysis.type === \"positive_net_worth\" && (\n                    <>\n                      {liquidityAnalysis.ratio < 0.3 && (\n                        <li className=\"flex items-start\">\n                          <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                          </svg>\n                          <span>Focus on building liquid assets to improve financial flexibility.</span>\n                        </li>\n                      )}\n                      \n                      {monthlySavings < (takeHomePay * 0.2) && (\n                        <li className=\"flex items-start\">\n                          <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                          </svg>\n                          <span>Consider increasing your liquid savings rate to at least 20% of take-home pay.</span>\n                        </li>\n                      )}\n                      \n                      {liquidAssets < (monthlyExpenses * 3) && (\n                        <li className=\"flex items-start\">\n                          <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                          </svg>\n                          <span>Build an emergency fund of at least 3-6 months of expenses in liquid assets.</span>\n                        </li>\n                      )}\n                      \n                      {totalLiabilities > 0 && totalLiabilities > (liquidAssets * 0.5) && (\n                        <li className=\"flex items-start\">\n                          <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                          </svg>\n                          <span>Consider accelerating debt payoff to improve your liquid net worth.</span>\n                        </li>\n                      )}\n                      \n                      {liquidAssets > (monthlyExpenses * 6) && (\n                        <li className=\"flex items-start\">\n                          <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                          </svg>\n                          <span>Consider investing some of your excess liquid assets for better long-term growth.</span>\n                        </li>\n                      )}\n                    </>\n                  )}\n                  \n                  <li className=\"flex items-start\">\n                    <svg className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                    </svg>\n                    <span>Track your liquidity ratio over time to ensure it aligns with your financial goals.</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default LiquidityDashboard;"],"names":["LiquidityDashboard","financialData","useContext","FinancialContext","viewMode","setViewMode","useState","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","liquidAssets","personalInfo","currentSavings","cpfAssets","currentCpfBalance","totalLiabilities","remainingLoan","totalAssets","totalLiquidNetWorth","totalNetWorth","liquidityRatio","liquidityAnalysis","calculateLiquidityMessage","ratio","message","Math","abs","type","liquidNetWorthRatio","assetBreakdownData","name","netWorthComparisonData","monthlyIncome","income","currentSalary","cpfContribution","cpfRate","takeHomePay","monthlyExpenses","expenses","reduce","sum","expense","amount","loanPayment","monthlyRepayment","monthlySavings","monthlyBreakdownData","projectionData","generateProjectionData","projection","currentLiquidAssets","currentCpfAssets","currentLoanBalance","loanInterestRate","interestRate","i","interestPayment","principalPayment","min","max","month","Date","setMonth","getMonth","monthName","toLocaleString","push","getFullYear","loanBalance","liquidNetWorth","COLORS","NET_WORTH_COLORS","Card","_ref","title","children","className","_jsxs","_jsx","onClick","_Fragment","ResponsiveContainer","width","height","BarChart","data","layout","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","tickFormatter","YAxis","dataKey","Tooltip","formatter","Legend","Bar","map","entry","index","Cell","fill","length","PieChart","Pie","cx","cy","labelLine","outerRadius","label","_ref2","percent","toFixed","AreaChart","Area","stroke","fillOpacity","scope","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}